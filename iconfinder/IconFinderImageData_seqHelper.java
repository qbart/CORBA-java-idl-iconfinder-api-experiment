package iconfinder;


/**
* iconfinder/IconFinderImageData_seqHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from iconfinder.idl
* Wednesday, February 1, 2012 2:13:19 AM CET
*/

abstract public class IconFinderImageData_seqHelper
{
  private static String  _id = "IDL:iconfinder/IconFinderImageData_seq:1.0";

  public static void insert (org.omg.CORBA.Any a, iconfinder.IconFinderImageData[] that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static iconfinder.IconFinderImageData[] extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = iconfinder.IconFinderImageDataHelper.type ();
      __typeCode = org.omg.CORBA.ORB.init ().create_sequence_tc (0, __typeCode);
      __typeCode = org.omg.CORBA.ORB.init ().create_alias_tc (iconfinder.IconFinderImageData_seqHelper.id (), "IconFinderImageData_seq", __typeCode);
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static iconfinder.IconFinderImageData[] read (org.omg.CORBA.portable.InputStream istream)
  {
    iconfinder.IconFinderImageData value[] = null;
    int _len0 = istream.read_long ();
    value = new iconfinder.IconFinderImageData[_len0];
    for (int _o1 = 0;_o1 < value.length; ++_o1)
      value[_o1] = iconfinder.IconFinderImageDataHelper.read (istream);
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, iconfinder.IconFinderImageData[] value)
  {
    ostream.write_long (value.length);
    for (int _i0 = 0;_i0 < value.length; ++_i0)
      iconfinder.IconFinderImageDataHelper.write (ostream, value[_i0]);
  }

}
